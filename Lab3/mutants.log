1:LVR:0:POS:lab3.UpgradedTriangle@classify(int,int,int):10:0 |==> 1
2:LVR:0:NEG:lab3.UpgradedTriangle@classify(int,int,int):10:0 |==> -1
3:ROR:<=(int,int):<(int,int):lab3.UpgradedTriangle@classify(int,int,int):10:a <= 0 |==> a < 0
4:ROR:<=(int,int):==(int,int):lab3.UpgradedTriangle@classify(int,int,int):10:a <= 0 |==> a == 0
5:LVR:0:POS:lab3.UpgradedTriangle@classify(int,int,int):10:0 |==> 1
6:LVR:0:NEG:lab3.UpgradedTriangle@classify(int,int,int):10:0 |==> -1
7:ROR:<=(int,int):<(int,int):lab3.UpgradedTriangle@classify(int,int,int):10:b <= 0 |==> b < 0
8:ROR:<=(int,int):==(int,int):lab3.UpgradedTriangle@classify(int,int,int):10:b <= 0 |==> b == 0
9:COR:||(boolean,boolean):!=(boolean,boolean):lab3.UpgradedTriangle@classify(int,int,int):10:a <= 0 || b <= 0 |==> a <= 0 != b <= 0
10:LVR:0:POS:lab3.UpgradedTriangle@classify(int,int,int):10:0 |==> 1
11:LVR:0:NEG:lab3.UpgradedTriangle@classify(int,int,int):10:0 |==> -1
12:ROR:<=(int,int):<(int,int):lab3.UpgradedTriangle@classify(int,int,int):10:c <= 0 |==> c < 0
13:ROR:<=(int,int):==(int,int):lab3.UpgradedTriangle@classify(int,int,int):10:c <= 0 |==> c == 0
14:COR:||(boolean,boolean):!=(boolean,boolean):lab3.UpgradedTriangle@classify(int,int,int):10:a <= 0 || b <= 0 || c <= 0 |==> (a <= 0 || b <= 0) != c <= 0
15:STD:<RETURN>:<NO-OP>:lab3.UpgradedTriangle@classify(int,int,int):11:return Type.INVALID; |==> <NO-OP>
16:LVR:0:POS:lab3.UpgradedTriangle@classify(int,int,int):12:0 |==> 1
17:LVR:0:NEG:lab3.UpgradedTriangle@classify(int,int,int):12:0 |==> -1
18:ROR:==(int,int):<=(int,int):lab3.UpgradedTriangle@classify(int,int,int):13:a == b |==> a <= b
19:ROR:==(int,int):>=(int,int):lab3.UpgradedTriangle@classify(int,int,int):13:a == b |==> a >= b
20:LVR:POS:0:lab3.UpgradedTriangle@classify(int,int,int):14:1 |==> 0
21:LVR:POS:NEG:lab3.UpgradedTriangle@classify(int,int,int):14:1 |==> -1
22:AOR:+(int,int):%(int,int):lab3.UpgradedTriangle@classify(int,int,int):14:trian + 1 |==> trian % 1
23:AOR:+(int,int):*(int,int):lab3.UpgradedTriangle@classify(int,int,int):14:trian + 1 |==> trian * 1
24:AOR:+(int,int):-(int,int):lab3.UpgradedTriangle@classify(int,int,int):14:trian + 1 |==> trian - 1
25:AOR:+(int,int):/(int,int):lab3.UpgradedTriangle@classify(int,int,int):14:trian + 1 |==> trian / 1
26:STD:<ASSIGN>:<NO-OP>:lab3.UpgradedTriangle@classify(int,int,int):14:trian = trian + 1; |==> <NO-OP>
27:ROR:==(int,int):<=(int,int):lab3.UpgradedTriangle@classify(int,int,int):15:a == c |==> a <= c
28:ROR:==(int,int):>=(int,int):lab3.UpgradedTriangle@classify(int,int,int):15:a == c |==> a >= c
29:LVR:POS:0:lab3.UpgradedTriangle@classify(int,int,int):16:2 |==> 0
30:LVR:POS:NEG:lab3.UpgradedTriangle@classify(int,int,int):16:2 |==> -2
31:AOR:+(int,int):%(int,int):lab3.UpgradedTriangle@classify(int,int,int):16:trian + 2 |==> trian % 2
32:AOR:+(int,int):*(int,int):lab3.UpgradedTriangle@classify(int,int,int):16:trian + 2 |==> trian * 2
33:AOR:+(int,int):-(int,int):lab3.UpgradedTriangle@classify(int,int,int):16:trian + 2 |==> trian - 2
34:AOR:+(int,int):/(int,int):lab3.UpgradedTriangle@classify(int,int,int):16:trian + 2 |==> trian / 2
35:STD:<ASSIGN>:<NO-OP>:lab3.UpgradedTriangle@classify(int,int,int):16:trian = trian + 2; |==> <NO-OP>
36:ROR:==(int,int):<=(int,int):lab3.UpgradedTriangle@classify(int,int,int):17:b == c |==> b <= c
37:ROR:==(int,int):>=(int,int):lab3.UpgradedTriangle@classify(int,int,int):17:b == c |==> b >= c
38:LVR:POS:0:lab3.UpgradedTriangle@classify(int,int,int):18:3 |==> 0
39:LVR:POS:NEG:lab3.UpgradedTriangle@classify(int,int,int):18:3 |==> -3
40:AOR:+(int,int):%(int,int):lab3.UpgradedTriangle@classify(int,int,int):18:trian + 3 |==> trian % 3
41:AOR:+(int,int):*(int,int):lab3.UpgradedTriangle@classify(int,int,int):18:trian + 3 |==> trian * 3
42:AOR:+(int,int):-(int,int):lab3.UpgradedTriangle@classify(int,int,int):18:trian + 3 |==> trian - 3
43:AOR:+(int,int):/(int,int):lab3.UpgradedTriangle@classify(int,int,int):18:trian + 3 |==> trian / 3
44:STD:<ASSIGN>:<NO-OP>:lab3.UpgradedTriangle@classify(int,int,int):18:trian = trian + 3; |==> <NO-OP>
45:LVR:0:POS:lab3.UpgradedTriangle@classify(int,int,int):19:0 |==> 1
46:LVR:0:NEG:lab3.UpgradedTriangle@classify(int,int,int):19:0 |==> -1
47:ROR:==(int,int):<=(int,int):lab3.UpgradedTriangle@classify(int,int,int):19:trian == 0 |==> trian <= 0
48:ROR:==(int,int):>=(int,int):lab3.UpgradedTriangle@classify(int,int,int):19:trian == 0 |==> trian >= 0
49:AOR:+(int,int):%(int,int):lab3.UpgradedTriangle@classify(int,int,int):20:a + b |==> a % b
50:AOR:+(int,int):*(int,int):lab3.UpgradedTriangle@classify(int,int,int):20:a + b |==> a * b
51:AOR:+(int,int):-(int,int):lab3.UpgradedTriangle@classify(int,int,int):20:a + b |==> a - b
52:AOR:+(int,int):/(int,int):lab3.UpgradedTriangle@classify(int,int,int):20:a + b |==> a / b
53:ROR:<=(int,int):<(int,int):lab3.UpgradedTriangle@classify(int,int,int):20:a + b <= c |==> a + b < c
54:ROR:<=(int,int):==(int,int):lab3.UpgradedTriangle@classify(int,int,int):20:a + b <= c |==> a + b == c
55:AOR:+(int,int):%(int,int):lab3.UpgradedTriangle@classify(int,int,int):20:a + c |==> a % c
56:AOR:+(int,int):*(int,int):lab3.UpgradedTriangle@classify(int,int,int):20:a + c |==> a * c
57:AOR:+(int,int):-(int,int):lab3.UpgradedTriangle@classify(int,int,int):20:a + c |==> a - c
58:AOR:+(int,int):/(int,int):lab3.UpgradedTriangle@classify(int,int,int):20:a + c |==> a / c
59:ROR:<=(int,int):<(int,int):lab3.UpgradedTriangle@classify(int,int,int):20:a + c <= b |==> a + c < b
60:ROR:<=(int,int):==(int,int):lab3.UpgradedTriangle@classify(int,int,int):20:a + c <= b |==> a + c == b
61:COR:||(boolean,boolean):!=(boolean,boolean):lab3.UpgradedTriangle@classify(int,int,int):20:a + b <= c || a + c <= b |==> a + b <= c != a + c <= b
62:AOR:+(int,int):%(int,int):lab3.UpgradedTriangle@classify(int,int,int):20:b + c |==> b % c
63:AOR:+(int,int):*(int,int):lab3.UpgradedTriangle@classify(int,int,int):20:b + c |==> b * c
64:AOR:+(int,int):-(int,int):lab3.UpgradedTriangle@classify(int,int,int):20:b + c |==> b - c
65:AOR:+(int,int):/(int,int):lab3.UpgradedTriangle@classify(int,int,int):20:b + c |==> b / c
66:ROR:<=(int,int):<(int,int):lab3.UpgradedTriangle@classify(int,int,int):20:b + c <= a |==> b + c < a
67:ROR:<=(int,int):==(int,int):lab3.UpgradedTriangle@classify(int,int,int):20:b + c <= a |==> b + c == a
68:COR:||(boolean,boolean):!=(boolean,boolean):lab3.UpgradedTriangle@classify(int,int,int):20:a + b <= c || a + c <= b || b + c <= a |==> (a + b <= c || a + c <= b) != b + c <= a
69:STD:<RETURN>:<NO-OP>:lab3.UpgradedTriangle@classify(int,int,int):21:return Type.INVALID; |==> <NO-OP>
70:STD:<RETURN>:<NO-OP>:lab3.UpgradedTriangle@classify(int,int,int):23:return Type.SCALENE; |==> <NO-OP>
71:LVR:POS:0:lab3.UpgradedTriangle@classify(int,int,int):24:3 |==> 0
72:LVR:POS:NEG:lab3.UpgradedTriangle@classify(int,int,int):24:3 |==> -3
73:ROR:>(int,int):!=(int,int):lab3.UpgradedTriangle@classify(int,int,int):24:trian > 3 |==> trian != 3
74:ROR:>(int,int):>=(int,int):lab3.UpgradedTriangle@classify(int,int,int):24:trian > 3 |==> trian >= 3
75:STD:<RETURN>:<NO-OP>:lab3.UpgradedTriangle@classify(int,int,int):25:return Type.EQUILATERAL; |==> <NO-OP>
76:LVR:POS:0:lab3.UpgradedTriangle@classify(int,int,int):26:1 |==> 0
77:LVR:POS:NEG:lab3.UpgradedTriangle@classify(int,int,int):26:1 |==> -1
78:ROR:==(int,int):<=(int,int):lab3.UpgradedTriangle@classify(int,int,int):26:trian == 1 |==> trian <= 1
79:ROR:==(int,int):>=(int,int):lab3.UpgradedTriangle@classify(int,int,int):26:trian == 1 |==> trian >= 1
80:AOR:+(int,int):%(int,int):lab3.UpgradedTriangle@classify(int,int,int):26:a + b |==> a % b
81:AOR:+(int,int):*(int,int):lab3.UpgradedTriangle@classify(int,int,int):26:a + b |==> a * b
82:AOR:+(int,int):-(int,int):lab3.UpgradedTriangle@classify(int,int,int):26:a + b |==> a - b
83:AOR:+(int,int):/(int,int):lab3.UpgradedTriangle@classify(int,int,int):26:a + b |==> a / b
84:ROR:>(int,int):!=(int,int):lab3.UpgradedTriangle@classify(int,int,int):26:a + b > c |==> a + b != c
85:ROR:>(int,int):>=(int,int):lab3.UpgradedTriangle@classify(int,int,int):26:a + b > c |==> a + b >= c
86:COR:&&(boolean,boolean):==(boolean,boolean):lab3.UpgradedTriangle@classify(int,int,int):26:trian == 1 && a + b > c |==> trian == 1 == a + b > c
87:STD:<RETURN>:<NO-OP>:lab3.UpgradedTriangle@classify(int,int,int):27:return Type.ISOSCELES; |==> <NO-OP>
88:LVR:POS:0:lab3.UpgradedTriangle@classify(int,int,int):28:2 |==> 0
89:LVR:POS:NEG:lab3.UpgradedTriangle@classify(int,int,int):28:2 |==> -2
90:ROR:==(int,int):<=(int,int):lab3.UpgradedTriangle@classify(int,int,int):28:trian == 2 |==> trian <= 2
91:ROR:==(int,int):>=(int,int):lab3.UpgradedTriangle@classify(int,int,int):28:trian == 2 |==> trian >= 2
92:AOR:+(int,int):%(int,int):lab3.UpgradedTriangle@classify(int,int,int):28:a + c |==> a % c
93:AOR:+(int,int):*(int,int):lab3.UpgradedTriangle@classify(int,int,int):28:a + c |==> a * c
94:AOR:+(int,int):-(int,int):lab3.UpgradedTriangle@classify(int,int,int):28:a + c |==> a - c
95:AOR:+(int,int):/(int,int):lab3.UpgradedTriangle@classify(int,int,int):28:a + c |==> a / c
96:ROR:>(int,int):!=(int,int):lab3.UpgradedTriangle@classify(int,int,int):28:a + c > b |==> a + c != b
97:ROR:>(int,int):>=(int,int):lab3.UpgradedTriangle@classify(int,int,int):28:a + c > b |==> a + c >= b
98:COR:&&(boolean,boolean):==(boolean,boolean):lab3.UpgradedTriangle@classify(int,int,int):28:trian == 2 && a + c > b |==> trian == 2 == a + c > b
99:STD:<RETURN>:<NO-OP>:lab3.UpgradedTriangle@classify(int,int,int):29:return Type.ISOSCELES; |==> <NO-OP>
100:LVR:POS:0:lab3.UpgradedTriangle@classify(int,int,int):30:3 |==> 0
101:LVR:POS:NEG:lab3.UpgradedTriangle@classify(int,int,int):30:3 |==> -3
102:ROR:==(int,int):<=(int,int):lab3.UpgradedTriangle@classify(int,int,int):30:trian == 3 |==> trian <= 3
103:ROR:==(int,int):>=(int,int):lab3.UpgradedTriangle@classify(int,int,int):30:trian == 3 |==> trian >= 3
104:AOR:+(int,int):%(int,int):lab3.UpgradedTriangle@classify(int,int,int):30:b + c |==> b % c
105:AOR:+(int,int):*(int,int):lab3.UpgradedTriangle@classify(int,int,int):30:b + c |==> b * c
106:AOR:+(int,int):-(int,int):lab3.UpgradedTriangle@classify(int,int,int):30:b + c |==> b - c
107:AOR:+(int,int):/(int,int):lab3.UpgradedTriangle@classify(int,int,int):30:b + c |==> b / c
108:ROR:>(int,int):!=(int,int):lab3.UpgradedTriangle@classify(int,int,int):30:b + c > a |==> b + c != a
109:ROR:>(int,int):>=(int,int):lab3.UpgradedTriangle@classify(int,int,int):30:b + c > a |==> b + c >= a
110:COR:&&(boolean,boolean):==(boolean,boolean):lab3.UpgradedTriangle@classify(int,int,int):30:trian == 3 && b + c > a |==> trian == 3 == b + c > a
111:STD:<RETURN>:<NO-OP>:lab3.UpgradedTriangle@classify(int,int,int):31:return Type.ISOSCELES; |==> <NO-OP>
112:EVR:<MEMBER_SELECT(lab3.UpgradedTriangle.Type)>:<DEFAULT>:lab3.UpgradedTriangle@classify(int,int,int):32:Type.INVALID |==> null
113:LVR:0:POS:lab3.UpgradedTriangle@getArea(int,int,int):37:0.0 |==> 1.0
114:LVR:0:NEG:lab3.UpgradedTriangle@getArea(int,int,int):37:0.0 |==> -1.0
115:STD:<RETURN>:<NO-OP>:lab3.UpgradedTriangle@getArea(int,int,int):37:return 0.0; |==> <NO-OP>
116:AOR:+(int,int):%(int,int):lab3.UpgradedTriangle@getArea(int,int,int):39:a + b |==> a % b
117:AOR:+(int,int):*(int,int):lab3.UpgradedTriangle@getArea(int,int,int):39:a + b |==> a * b
118:AOR:+(int,int):-(int,int):lab3.UpgradedTriangle@getArea(int,int,int):39:a + b |==> a - b
119:AOR:+(int,int):/(int,int):lab3.UpgradedTriangle@getArea(int,int,int):39:a + b |==> a / b
120:AOR:+(int,int):%(int,int):lab3.UpgradedTriangle@getArea(int,int,int):39:a + b + c |==> (a + b) % c
121:AOR:+(int,int):*(int,int):lab3.UpgradedTriangle@getArea(int,int,int):39:a + b + c |==> (a + b) * c
122:AOR:+(int,int):-(int,int):lab3.UpgradedTriangle@getArea(int,int,int):39:a + b + c |==> a + b - c
123:AOR:+(int,int):/(int,int):lab3.UpgradedTriangle@getArea(int,int,int):39:a + b + c |==> (a + b) / c
124:LVR:POS:0:lab3.UpgradedTriangle@getArea(int,int,int):39:2.0 |==> 0.0
125:LVR:POS:NEG:lab3.UpgradedTriangle@getArea(int,int,int):39:2.0 |==> -2.0
126:AOR:/(double,double):%(double,double):lab3.UpgradedTriangle@getArea(int,int,int):39:(double)(a + b + c) / 2.0 |==> (double)(a + b + c) % 2.0
127:AOR:/(double,double):*(double,double):lab3.UpgradedTriangle@getArea(int,int,int):39:(double)(a + b + c) / 2.0 |==> (double)(a + b + c) * 2.0
128:AOR:/(double,double):+(double,double):lab3.UpgradedTriangle@getArea(int,int,int):39:(double)(a + b + c) / 2.0 |==> (double)(a + b + c) + 2.0
129:AOR:/(double,double):-(double,double):lab3.UpgradedTriangle@getArea(int,int,int):39:(double)(a + b + c) / 2.0 |==> (double)(a + b + c) - 2.0
130:AOR:-(double,double):%(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p - a |==> p % a
131:AOR:-(double,double):*(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p - a |==> p * a
132:AOR:-(double,double):+(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p - a |==> p + a
133:AOR:-(double,double):/(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p - a |==> p / a
134:AOR:*(double,double):%(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p * (p - a) |==> p % (p - a)
135:AOR:*(double,double):+(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p * (p - a) |==> p + (p - a)
136:AOR:*(double,double):-(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p * (p - a) |==> p - (p - a)
137:AOR:*(double,double):/(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p * (p - a) |==> p / (p - a)
138:AOR:-(double,double):%(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p - b |==> p % b
139:AOR:-(double,double):*(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p - b |==> p * b
140:AOR:-(double,double):+(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p - b |==> p + b
141:AOR:-(double,double):/(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p - b |==> p / b
142:AOR:*(double,double):%(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p * (p - a) * (p - b) |==> p * (p - a) % (p - b)
143:AOR:*(double,double):+(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p * (p - a) * (p - b) |==> p * (p - a) + (p - b)
144:AOR:*(double,double):-(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p * (p - a) * (p - b) |==> p * (p - a) - (p - b)
145:AOR:*(double,double):/(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p * (p - a) * (p - b) |==> p * (p - a) / (p - b)
146:AOR:-(double,double):%(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p - c |==> p % c
147:AOR:-(double,double):*(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p - c |==> p * c
148:AOR:-(double,double):+(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p - c |==> p + c
149:AOR:-(double,double):/(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p - c |==> p / c
150:AOR:*(double,double):%(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p * (p - a) * (p - b) * (p - c) |==> p * (p - a) * (p - b) % (p - c)
151:AOR:*(double,double):+(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p * (p - a) * (p - b) * (p - c) |==> p * (p - a) * (p - b) + (p - c)
152:AOR:*(double,double):-(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p * (p - a) * (p - b) * (p - c) |==> p * (p - a) * (p - b) - (p - c)
153:AOR:*(double,double):/(double,double):lab3.UpgradedTriangle@getArea(int,int,int):40:p * (p - a) * (p - b) * (p - c) |==> p * (p - a) * (p - b) / (p - c)
